

Joshua Pardue
Southern New Hampshire University
CS-250-T2603 Software Development Lifecycle
Professor Erin Tirrell
December 9, 2021






Sprint Review and Retrospective
	Overall, the development of the SNHU Travel application went well specifically with the Scrum-agile dynamic in place. Goals were met and even exceeded with respect to a high value vacation booking software product, however, in an effort to gain further understanding and improve on the process, a review is in order to determine what and how the team can do to provide a better product in the future. 
	The various roles of the Scrum-agile Team contributed immensely to the success of the SNHU Travel project. The Scrum Master ensured that the daily Scrum events involved accurate and detailed planning.  Sprint planning ensured that the team was focused and prepared to achieve the desired goal. A few steps went into this plan such as review of product roadmap, grooming of backlog, proposed goal and backlog prior to meeting, use of data and experience to inform meeting, and discussing tasks that need to be completed. The Product Owner added necessary value to this project resulting from the work of the development team with the connection and correlation between the customer and the development process. When engaging with users and stakeholders, the Product Owner was proactive and accountable specifically when referring to vision and strategy of the product. The Tester for the project was able to categorize, implement, and outline various methods of testing the product, ensure its quality, and value of the overall delivery process. Specific information was gathered from correspondence and communication with the Product Owner where metrics and clarity were defined for the test cases. The Developer for the project had varying responsibilities regarding the Scrum such as creating a plan for the Sprint, Sprint Backlog, and achieving goals defined in the Sprint. Assurances and communication were provided to the Product Owner and Scrum Master that the work was being performed as planned. Consistent reporting was made to the agile team for specific changes, particularly to Product Owner and/or Tester. Requests were submitted for reasonable goals and guidelines for deliverables, consistent communication, coordination, and collaboration was maintained which increased focus regarding feedback of changing requirements. 
	The Scrum-agile approach to the SDLC helped each of the user stories come to completion in several ways. Further details were consistently needed in the user stories about how the specifics of a task or function should transpire. In a situation such as agile software development, details seem to be the major component of the operation. The main revision to each user story was questioning further detail on how the action should occur and to what level of detail. This would have proved substantially more difficult in the traditional methodology in that it would have been less accepting of changes and in flexibility. Close attention was paid to who wanted the functionality, what it is they wanted, and why they wanted it. The difference between a casual and experienced user come into the equation as a casual user would minimally realize some implemented features while an experienced user would take advantage of more in depth properties and potentially have an opinion which added further value to the product.
	A Scrum-agile approach was considerably more efficient in supporting the project when influences interrupted and changed its direction. The agile methodology allowed for a greater amount of flexibility its approach to development as sprints allowed for testing along with customer communication at various phases of the project. The alternative would be completing the project and having the customer request changes after the fact. While the traditional method of project management has its benefits, agile seems to be more fluid and compatible for the development phases. Throughout the course of the project, it was necessary to change and adapt requirements. Specifically, adjusted features were needed such as a changeover to emphasize wellness locations in the software. With a rigid waterfall method, these changes would have only been known about in the latter phases of the project proving difficult to alter resulting in poor satisfaction for the team and customer. 
	Effective communication in any project or production-based scenario requiring a team effort is essential. Practicing good communication is one of the main elements involved in maintaining an efficient assignment. On an agile team, how this communication is established is also key in providing information such as objectives, potential obstacles or issues, comments, concerns, and ideas. A communication practice from this project that helped the team complete their work was the consistent and precise emails detailing exactly what was expected from each role. It was critical to communicate accuracy and request that same correctness in a reply which in turn, established efficiency in the conversation. Emails were written to the Product Owner and Tester prompting them for details regarding pass/fail features of the product. Requests were also made to them for daily updates on additional specifics and changes to the sprint and backlog when necessary.  Further communication and emails were made requesting particulars for each of the user stories characteristics which would add a higher value and functionality to each of the requested tasks. While the emails were not as structured as face-to-face transactions, they did allow more of a formal and recordable way of communication for project requests and replies.
	Certain organizational tools and Scrum-agile principles helped in the success of the team on this project. Azure Boards increase efficiency and coordination by providing a process of planning and tracking tasks and items related to the project such as statuses, user stories, backlogs, features, bugs and defects. This type of arrangement allowed for a greater contributing application of Scrum-agile principles such as self-organization. This allowed for a level of independence of the team and helped assess performance, collaboration with the team which promoted awareness and clarity for the release, value-based prioritization which emphasized importance of the order tasks need to be completed, timeboxing which scheduled certain amounts of time for certain activities such as sprints and meetings, and development which was constantly being adjusted and revised to create an optimum product. 
	The effectiveness of the Scrum-agile approach for the SNHU Travel project came with some pros and cons. The benefits of this methodology included faster software development life cycle. With the customer changes, a rigid structure would not allow for flexible adjustments. There was also a predictable schedule with sprints and an increased allowance for uncertainty which permitted greater customer satisfaction and involvement. To add to the greater customer experience, consistent communication ensured a higher quality finished product in a shorter amount of time. The downside to the Scrum-agile approach was in requiring consistency in every team members maximum dedication where if a specific role falters or comes up short then the whole team and project potentially suffers. Also, with the high degree of customer involvement necessary for each sprint, this could add a certain amount of discomfort when relying on steady and necessary communication in the project relationship. The Scrum-agile approach was, however, the best approach for the SNHU Travel project mainly due to its flexibility and adaptability. It was a project that was designed around customer-based input. This methodology was ideal due to its efficiency and innovation rather than a detailed and rigid process. 
	
